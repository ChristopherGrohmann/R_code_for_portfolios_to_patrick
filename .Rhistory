j = 1
portfolios <- rbindlist(list (portfolios,portfolios[User_id == i & time == j - 1,.( User_id, time=j, instrument, value, isnegative )]))
if ( actions[User_id == i & time == j, instrument] %in% portfolios[User_id ==i & time==j, instrument]){
x<- actions$instrument[actions$User_id == i & actions$time == j]
portfolios$value[portfolios$User_id ==i & portfolios$time==j & portfolios$instrument == x] <- portfolios$value[portfolios$User_id ==i & portfolios$time==j & portfolios$instrument == x] + actions$value[actions$User_id == i & actions$time == j]
}else{
#Create a new row, that has the transaction
portfolios <- rbindlist(list (portfolios,actions[User_id == i & time == j ,.(User_id,time, instrument, value, isnegative =0)]))
}
#those postitions that have zero value should drop out
portfolios$isnegative[portfolios$value <=0 &  portfolios$User_id ==i &  portfolios$time==j] <- 1
portfolios <- portfolios[isnegative != 1]
j = 2
if ( actions[User_id == i & time == j, instrument] %in% portfolios[User_id ==i & time==j, instrument]){
x<- actions$instrument[actions$User_id == i & actions$time == j]
portfolios$value[portfolios$User_id ==i & portfolios$time==j & portfolios$instrument == x] <- portfolios$value[portfolios$User_id ==i & portfolios$time==j & portfolios$instrument == x] + actions$value[actions$User_id == i & actions$time == j]
}else{
#Create a new row, that has the transaction
portfolios <- rbindlist(list (portfolios,actions[User_id == i & time == j ,.(User_id,time, instrument, value, isnegative =0)]))
}
#those postitions that have zero value should drop out
portfolios$isnegative[portfolios$value <=0 &  portfolios$User_id ==i &  portfolios$time==j] <- 1
portfolios <- portfolios[isnegative != 1]
j = 3
portfolios <- rbindlist(list (portfolios,portfolios[User_id == i & time == j - 1,.( User_id, time=j, instrument, value, isnegative )]))
if ( actions[User_id == i & time == j, instrument] %in% portfolios[User_id ==i & time==j, instrument]){
x<- actions$instrument[actions$User_id == i & actions$time == j]
portfolios$value[portfolios$User_id ==i & portfolios$time==j & portfolios$instrument == x] <- portfolios$value[portfolios$User_id ==i & portfolios$time==j & portfolios$instrument == x] + actions$value[actions$User_id == i & actions$time == j]
}else{
#Create a new row, that has the transaction
portfolios <- rbindlist(list (portfolios,actions[User_id == i & time == j ,.(User_id,time, instrument, value, isnegative =0)]))
}
#those postitions that have zero value should drop out
portfolios$isnegative[portfolios$value <=0 &  portfolios$User_id ==i &  portfolios$time==j] <- 1
portfolios <- portfolios[isnegative != 1]
portfolios <- actions[,.(time= 0, instrument=0, value = 0,isnegative = 0), by = c("User_id")]
j= 1
portfolios <- rbindlist(list (portfolios,portfolios[User_id == i & time == j - 1,.( User_id, time=j, instrument, value, isnegative )]))
if ( actions[User_id == i & time == j, instrument] %in% portfolios[User_id ==i & time==j, instrument]){
x<- actions$instrument[actions$User_id == i & actions$time == j]
portfolios$value[portfolios$User_id ==i & portfolios$time==j & portfolios$instrument == x] <- portfolios$value[portfolios$User_id ==i & portfolios$time==j & portfolios$instrument == x] + actions$value[actions$User_id == i & actions$time == j]
}else{
#Create a new row, that has the transaction
portfolios <- rbindlist(list (portfolios,actions[User_id == i & time == j ,.(User_id,time, instrument, value, isnegative =0)]))
}
#those postitions that have zero value should drop out
portfolios$isnegative[portfolios$value <=0 &  portfolios$User_id ==i &  portfolios$time==j] <- 1
portfolios <- portfolios[isnegative != 1]
j = 2
portfolios <- rbindlist(list (portfolios,portfolios[User_id == i & time == j - 1,.( User_id, time=j, instrument, value, isnegative )]))
if ( actions[User_id == i & time == j, instrument] %in% portfolios[User_id ==i & time==j, instrument]){
x<- actions$instrument[actions$User_id == i & actions$time == j]
portfolios$value[portfolios$User_id ==i & portfolios$time==j & portfolios$instrument == x] <- portfolios$value[portfolios$User_id ==i & portfolios$time==j & portfolios$instrument == x] + actions$value[actions$User_id == i & actions$time == j]
}else{
#Create a new row, that has the transaction
portfolios <- rbindlist(list (portfolios,actions[User_id == i & time == j ,.(User_id,time, instrument, value, isnegative =0)]))
}
#those postitions that have zero value should drop out
portfolios$isnegative[portfolios$value <=0 &  portfolios$User_id ==i &  portfolios$time==j] <- 1
portfolios <- portfolios[isnegative != 1]
j = 3
portfolios[User_id == i & time == j - 1,.( User_id, time = j, instrument, value, isnegative )]
portfolios <- rbindlist(list (portfolios,portfolios[User_id == i & time == j - 1,.( User_id, time = j, instrument, value, isnegative )]))
if ( actions[User_id == i & time == j, instrument] %in% portfolios[User_id ==i & time==j, instrument]){
x<- actions$instrument[actions$User_id == i & actions$time == j]
portfolios$value[portfolios$User_id ==i & portfolios$time==j & portfolios$instrument == x] <- portfolios$value[portfolios$User_id ==i & portfolios$time==j & portfolios$instrument == x] + actions$value[actions$User_id == i & actions$time == j]
}else{
#Create a new row, that has the transaction
portfolios <- rbindlist(list (portfolios,actions[User_id == i & time == j ,.(User_id,time, instrument, value, isnegative =0)]))
}
portfolios$isnegative[portfolios$value <=0 &  portfolios$User_id ==i &  portfolios$time==j] <- 1
portfolios <- portfolios[isnegative != 1]
portfolios <- actions[,.(time= 0, instrument=0, value = 0,isnegative = 0), by = c("User_id")]
for (j in 1:4){
#portfolios[User_id == i & time == j] <- portfolios[User_id == i & time == j - 1,.( User_id, time=j, instrument, value, isnegative )]#case in the beginning, where no previous allocation exists
portfolios <- rbindlist(list (portfolios,portfolios[User_id == i & time == j - 1,.( User_id, time = j, instrument, value, isnegative )]))
if ( actions[User_id == i & time == j, instrument] %in% portfolios[User_id ==i & time==j, instrument]){
x<- actions$instrument[actions$User_id == i & actions$time == j]
portfolios$value[portfolios$User_id ==i & portfolios$time==j & portfolios$instrument == x] <- portfolios$value[portfolios$User_id ==i & portfolios$time==j & portfolios$instrument == x] + actions$value[actions$User_id == i & actions$time == j]
}else{
#Create a new row, that has the transaction
portfolios <- rbindlist(list (portfolios,actions[User_id == i & time == j ,.(User_id,time, instrument, value, isnegative =0)]))
}
#those postitions that have zero value should drop out
portfolios$isnegative[portfolios$value <=0 &  portfolios$User_id ==i &  portfolios$time==j] <- 1
portfolios <- portfolios[isnegative != 1]
}
hh <- actions$User_id[, User_id , by = c("User_id")]
hh <- actions$User_id[,, by = c("User_id")]
hh <- actions[,.(User_id) , by = c("User_id")]
View(hh)
hh <- as.list(hh$User_id)
hh <- actions[,.(value) , by = c("User_id")]
hh <- actions[,.(value) , by = c("User_id")]
View(hh)
View(hh)
hh <- actions[,.(mean(value)) , by = c("User_id")]
hh <- as.list(hh$User_id)
hh$User_id
hh <- actions[,.(mean(value)) , by = c("User_id")]
View(hh)
View(hh)
hh$User_id
list <- as.list (hh$User_id)
i <- list[k]
k =1
i <- list[k]
i
for (j in 1:4){
#portfolios[User_id == i & time == j] <- portfolios[User_id == i & time == j - 1,.( User_id, time=j, instrument, value, isnegative )]#case in the beginning, where no previous allocation exists
portfolios <- rbindlist(list (portfolios,portfolios[User_id == i & time == j - 1,.( User_id, time = j, instrument, value, isnegative )]))
if ( actions[User_id == i & time == j, instrument] %in% portfolios[User_id ==i & time==j, instrument]){
x<- actions$instrument[actions$User_id == i & actions$time == j]
portfolios$value[portfolios$User_id ==i & portfolios$time==j & portfolios$instrument == x] <- portfolios$value[portfolios$User_id ==i & portfolios$time==j & portfolios$instrument == x] + actions$value[actions$User_id == i & actions$time == j]
}else{
#Create a new row, that has the transaction
portfolios <- rbindlist(list (portfolios,actions[User_id == i & time == j ,.(User_id,time, instrument, value, isnegative =0)]))
}
#those postitions that have zero value should drop out
portfolios$isnegative[portfolios$value <=0 &  portfolios$User_id ==i &  portfolios$time==j] <- 1
portfolios <- portfolios[isnegative != 1]
}
portfolios <- actions[,.(time= 0, instrument=0, value = 0,isnegative = 0), by = c("User_id")]
#Try the whole thing with loops
hh <- actions[,.(mean(value)) , by = c("User_id")]
list <- as.list (hh$User_id)
for (k in 1: length(list)){
i <- list[k]
for (j in 1:4){
#portfolios[User_id == i & time == j] <- portfolios[User_id == i & time == j - 1,.( User_id, time=j, instrument, value, isnegative )]#case in the beginning, where no previous allocation exists
portfolios <- rbindlist(list (portfolios,portfolios[User_id == i & time == j - 1,.( User_id, time = j, instrument, value, isnegative )]))
if ( actions[User_id == i & time == j, instrument] %in% portfolios[User_id ==i & time==j, instrument]){
x<- actions$instrument[actions$User_id == i & actions$time == j]
portfolios$value[portfolios$User_id ==i & portfolios$time==j & portfolios$instrument == x] <- portfolios$value[portfolios$User_id ==i & portfolios$time==j & portfolios$instrument == x] + actions$value[actions$User_id == i & actions$time == j]
}else{
#Create a new row, that has the transaction
portfolios <- rbindlist(list (portfolios,actions[User_id == i & time == j ,.(User_id,time, instrument, value, isnegative =0)]))
}
#those postitions that have zero value should drop out
portfolios$isnegative[portfolios$value <=0 &  portfolios$User_id ==i &  portfolios$time==j] <- 1
portfolios <- portfolios[isnegative != 1]
}
}
minimum(time )
?minimum
min <- actions[User_id==i, .(min(time ))]
View(min)
portfolios <- actions[,.(time= 0, instrument=0, value = 0,isnegative = 0), by = c("User_id")]
#Try the whole thing with loops
hh <- actions[,.(mean(value)) , by = c("User_id")]
list <- as.list (hh$User_id)
for (k in 1: length(list)){
i <- list[k]
min <- actions[User_id==i, .(min(time ))]
for (j in min:4){
#portfolios[User_id == i & time == j] <- portfolios[User_id == i & time == j - 1,.( User_id, time=j, instrument, value, isnegative )]#case in the beginning, where no previous allocation exists
portfolios <- rbindlist(list (portfolios,portfolios[User_id == i & time == j - 1,.( User_id, time = j, instrument, value, isnegative )]))
if ( actions[User_id == i & time == j, instrument] %in% portfolios[User_id ==i & time==j, instrument]){
x<- actions$instrument[actions$User_id == i & actions$time == j]
portfolios$value[portfolios$User_id ==i & portfolios$time==j & portfolios$instrument == x] <- portfolios$value[portfolios$User_id ==i & portfolios$time==j & portfolios$instrument == x] + actions$value[actions$User_id == i & actions$time == j]
}else{
#Create a new row, that has the transaction
portfolios <- rbindlist(list (portfolios,actions[User_id == i & time == j ,.(User_id,time, instrument, value, isnegative =0)]))
}
#those postitions that have zero value should drop out
portfolios$isnegative[portfolios$value <=0 &  portfolios$User_id ==i &  portfolios$time==j] <- 1
portfolios <- portfolios[isnegative != 1]
}
}
min <- as.double(actions[User_id==i, .(min(time ))])
for (j in min:4){
#portfolios[User_id == i & time == j] <- portfolios[User_id == i & time == j - 1,.( User_id, time=j, instrument, value, isnegative )]#case in the beginning, where no previous allocation exists
portfolios <- rbindlist(list (portfolios,portfolios[User_id == i & time == j - 1,.( User_id, time = j, instrument, value, isnegative )]))
if ( actions[User_id == i & time == j, instrument] %in% portfolios[User_id ==i & time==j, instrument]){
x<- actions$instrument[actions$User_id == i & actions$time == j]
portfolios$value[portfolios$User_id ==i & portfolios$time==j & portfolios$instrument == x] <- portfolios$value[portfolios$User_id ==i & portfolios$time==j & portfolios$instrument == x] + actions$value[actions$User_id == i & actions$time == j]
}else{
#Create a new row, that has the transaction
portfolios <- rbindlist(list (portfolios,actions[User_id == i & time == j ,.(User_id,time, instrument, value, isnegative =0)]))
}
#those postitions that have zero value should drop out
portfolios$isnegative[portfolios$value <=0 &  portfolios$User_id ==i &  portfolios$time==j] <- 1
portfolios <- portfolios[isnegative != 1]
}
portfolios <- actions[,.(time= 0, instrument=0, value = 0,isnegative = 0), by = c("User_id")]
#Try the whole thing with loops
hh <- actions[,.(mean(value)) , by = c("User_id")]
list <- as.list (hh$User_id)
for (k in 1: length(list)){
i <- list[k]
min <- as.double(actions[User_id==i, .(min(time ))])
for (j in min:4){
#portfolios[User_id == i & time == j] <- portfolios[User_id == i & time == j - 1,.( User_id, time=j, instrument, value, isnegative )]#case in the beginning, where no previous allocation exists
portfolios <- rbindlist(list (portfolios,portfolios[User_id == i & time == j - 1,.( User_id, time = j, instrument, value, isnegative )]))
if ( actions[User_id == i & time == j, instrument] %in% portfolios[User_id ==i & time==j, instrument]){
x<- actions$instrument[actions$User_id == i & actions$time == j]
portfolios$value[portfolios$User_id ==i & portfolios$time==j & portfolios$instrument == x] <- portfolios$value[portfolios$User_id ==i & portfolios$time==j & portfolios$instrument == x] + actions$value[actions$User_id == i & actions$time == j]
}else{
#Create a new row, that has the transaction
portfolios <- rbindlist(list (portfolios,actions[User_id == i & time == j ,.(User_id,time, instrument, value, isnegative =0)]))
}
#those postitions that have zero value should drop out
portfolios$isnegative[portfolios$value <=0 &  portfolios$User_id ==i &  portfolios$time==j] <- 1
portfolios <- portfolios[isnegative != 1]
}
}
portfolios <- actions[,.(time= 0, instrument=0, value = 0,isnegative = 0), by = c("User_id")]
#Try the whole thing with loops
hh <- actions[,.(mean(value)) , by = c("User_id")]
list <- as.list (hh$User_id)
for (k in 1: length(list)){
i <- list[k]
min <- as.double(actions[User_id==i, .(min(time ))])
for (j in min:4){
#portfolios[User_id == i & time == j] <- portfolios[User_id == i & time == j - 1,.( User_id, time=j, instrument, value, isnegative )]#case in the beginning, where no previous allocation exists
portfolios <- rbindlist(list (portfolios,portfolios[User_id == i & time == j - 1,.( User_id, time = j, instrument, value, isnegative )]))
if ( actions[User_id == i & time == j, instrument]){
if ( actions[User_id == i & time == j, instrument] %in% portfolios[User_id ==i & time==j, instrument]){
x<- actions$instrument[actions$User_id == i & actions$time == j]
portfolios$value[portfolios$User_id ==i & portfolios$time==j & portfolios$instrument == x] <- portfolios$value[portfolios$User_id ==i & portfolios$time==j & portfolios$instrument == x] + actions$value[actions$User_id == i & actions$time == j]
}else{
#Create a new row, that has the transaction
portfolios <- rbindlist(list (portfolios,actions[User_id == i & time == j ,.(User_id,time, instrument, value, isnegative =0)]))
}
#those postitions that have zero value should drop out
portfolios$isnegative[portfolios$value <=0 &  portfolios$User_id ==i &  portfolios$time==j] <- 1
portfolios <- portfolios[isnegative != 1]
}
}
}
!is.na(actions[User_id == i & time == j, instrument])
portfolios <- actions[,.(time= 0, instrument=0, value = 0,isnegative = 0), by = c("User_id")]
#Try the whole thing with loops
hh <- actions[,.(mean(value)) , by = c("User_id")]
list <- as.list (hh$User_id)
for (k in 1: length(list)){
i <- list[k]
min <- as.double(actions[User_id==i, .(min(time ))])
for (j in min:4){
#portfolios[User_id == i & time == j] <- portfolios[User_id == i & time == j - 1,.( User_id, time=j, instrument, value, isnegative )]#case in the beginning, where no previous allocation exists
portfolios <- rbindlist(list (portfolios,portfolios[User_id == i & time == j - 1,.( User_id, time = j, instrument, value, isnegative )]))
if ( !is.na(actions[User_id == i & time == j, instrument])){
if ( actions[User_id == i & time == j, instrument] %in% portfolios[User_id ==i & time==j, instrument]){
x<- actions$instrument[actions$User_id == i & actions$time == j]
portfolios$value[portfolios$User_id ==i & portfolios$time==j & portfolios$instrument == x] <- portfolios$value[portfolios$User_id ==i & portfolios$time==j & portfolios$instrument == x] + actions$value[actions$User_id == i & actions$time == j]
}else{
#Create a new row, that has the transaction
portfolios <- rbindlist(list (portfolios,actions[User_id == i & time == j ,.(User_id,time, instrument, value, isnegative =0)]))
}
#those postitions that have zero value should drop out
portfolios$isnegative[portfolios$value <=0 &  portfolios$User_id ==i &  portfolios$time==j] <- 1
portfolios <- portfolios[isnegative != 1]
}
}
}
actions[User_id == i & time == j, instrument]
!is.na(actions[User_id == i & time == j, instrument])
is.na(actions[User_id == i & time == j, instrument])
if ( is.na(actions[User_id == i & time == j, instrument]))
is.na(actions[User_id == i & time == j, instrument])
actions[User_id == i & time == j, instrument]
actions$instrument[User_id == i & time == j]
actions$instrument[actions$User_id == i & actions$time == j]
is.na(actions$instrument[actions$User_id == i & actions$time == j])
if ( (actions$instrument[actions$User_id == i & actions$time == j]))
{1}
actions$instrument[actions$User_id == i & actions$time == j]
if ( actions$instrument[actions$User_id == i & actions$time == j] == character(0)){
if ( actions[User_id == i & time == j, instrument] %in% portfolios[User_id ==i & time==j, instrument]){
x<- actions$instrument[actions$User_id == i & actions$time == j]
portfolios$value[portfolios$User_id ==i & portfolios$time==j & portfolios$instrument == x] <- portfolios$value[portfolios$User_id ==i & portfolios$time==j & portfolios$instrument == x] + actions$value[actions$User_id == i & actions$time == j]
}else{
#Create a new row, that has the transaction
portfolios <- rbindlist(list (portfolios,actions[User_id == i & time == j ,.(User_id,time, instrument, value, isnegative =0)]))
}
#those postitions that have zero value should drop out
portfolios$isnegative[portfolios$value <=0 &  portfolios$User_id ==i &  portfolios$time==j] <- 1
portfolios <- portfolios[isnegative != 1]
}
if ( actions$instrument[actions$User_id == i & actions$time == j] == 0){
if ( actions[User_id == i & time == j, instrument] %in% portfolios[User_id ==i & time==j, instrument]){
x<- actions$instrument[actions$User_id == i & actions$time == j]
portfolios$value[portfolios$User_id ==i & portfolios$time==j & portfolios$instrument == x] <- portfolios$value[portfolios$User_id ==i & portfolios$time==j & portfolios$instrument == x] + actions$value[actions$User_id == i & actions$time == j]
}else{
#Create a new row, that has the transaction
portfolios <- rbindlist(list (portfolios,actions[User_id == i & time == j ,.(User_id,time, instrument, value, isnegative =0)]))
}
#those postitions that have zero value should drop out
portfolios$isnegative[portfolios$value <=0 &  portfolios$User_id ==i &  portfolios$time==j] <- 1
portfolios <- portfolios[isnegative != 1]
}
actiontime <- as.list(actions$time[User_id== i])
actiontime <- as.list(actions$time[actions$User_id== i])
actiontime <- as.list(actions$time[actions$User_id== i])
portfolios <- actions[,.(time= 0, instrument=0, value = 0,isnegative = 0), by = c("User_id")]
#Try the whole thing with loops
hh <- actions[,.(mean(value)) , by = c("User_id")]
list <- as.list (hh$User_id)
for (k in 1: length(list)){
i <- list[k]
min <- as.double(actions[User_id==i, .(min(time ))])
actiontime <- as.list(actions$time[actions$User_id== i])
for (j in min:4){
#portfolios[User_id == i & time == j] <- portfolios[User_id == i & time == j - 1,.( User_id, time=j, instrument, value, isnegative )]#case in the beginning, where no previous allocation exists
portfolios <- rbindlist(list (portfolios,portfolios[User_id == i & time == j - 1,.( User_id, time = j, instrument, value, isnegative )]))
if ( j in actiontime){
if ( actions[User_id == i & time == j, instrument] %in% portfolios[User_id ==i & time==j, instrument]){
x<- actions$instrument[actions$User_id == i & actions$time == j]
portfolios$value[portfolios$User_id ==i & portfolios$time==j & portfolios$instrument == x] <- portfolios$value[portfolios$User_id ==i & portfolios$time==j & portfolios$instrument == x] + actions$value[actions$User_id == i & actions$time == j]
}else{
#Create a new row, that has the transaction
portfolios <- rbindlist(list (portfolios,actions[User_id == i & time == j ,.(User_id,time, instrument, value, isnegative =0)]))
}
#those postitions that have zero value should drop out
portfolios$isnegative[portfolios$value <=0 &  portfolios$User_id ==i &  portfolios$time==j] <- 1
portfolios <- portfolios[isnegative != 1]
}
}
}
portfolios <- actions[,.(time= 0, instrument=0, value = 0,isnegative = 0), by = c("User_id")]
#Try the whole thing with loops
hh <- actions[,.(mean(value)) , by = c("User_id")]
list <- as.list (hh$User_id)
for (k in 1: length(list)){
i <- list[k]
min <- as.double(actions[User_id==i, .(min(time ))])
actiontime <- as.list(actions$time[actions$User_id== i])
for (j in min:4){
#portfolios[User_id == i & time == j] <- portfolios[User_id == i & time == j - 1,.( User_id, time=j, instrument, value, isnegative )]#case in the beginning, where no previous allocation exists
portfolios <- rbindlist(list (portfolios,portfolios[User_id == i & time == j - 1,.( User_id, time = j, instrument, value, isnegative )]))
if ( j in actiontime){
if ( actions[User_id == i & time == j, instrument] %in% portfolios[User_id ==i & time==j, instrument]){
x<- actions$instrument[actions$User_id == i & actions$time == j]
portfolios$value[portfolios$User_id ==i & portfolios$time==j & portfolios$instrument == x] <- portfolios$value[portfolios$User_id ==i & portfolios$time==j & portfolios$instrument == x] + actions$value[actions$User_id == i & actions$time == j]
}else{
#Create a new row, that has the transaction
portfolios <- rbindlist(list (portfolios,actions[User_id == i & time == j ,.(User_id,time, instrument, value, isnegative =0)]))
}
#those postitions that have zero value should drop out
portfolios$isnegative[portfolios$value <=0 &  portfolios$User_id ==i &  portfolios$time==j] <- 1
portfolios <- portfolios[isnegative != 1]
}
}
}
if ( actions[User_id == i & time == j, instrument] %in% portfolios[User_id ==i & time==j, instrument]){
x<- actions$instrument[actions$User_id == i & actions$time == j]
portfolios$value[portfolios$User_id ==i & portfolios$time==j & portfolios$instrument == x] <- portfolios$value[portfolios$User_id ==i & portfolios$time==j & portfolios$instrument == x] + actions$value[actions$User_id == i & actions$time == j]
}else{
#Create a new row, that has the transaction
portfolios <- rbindlist(list (portfolios,actions[User_id == i & time == j ,.(User_id,time, instrument, value, isnegative =0)]))
}
#those postitions that have zero value should drop out
portfolios$isnegative[portfolios$value <=0 &  portfolios$User_id ==i &  portfolios$time==j] <- 1
portfolios <- portfolios[isnegative != 1]
portfolios <- actions[,.(time= 0, instrument=0, value = 0,isnegative = 0), by = c("User_id")]
View(portfolios)
#Try the whole thing with loops
hh <- actions[,.(mean(value)) , by = c("User_id")]
list <- as.list (hh$User_id)
for (k in 1: length(list)){
i <- list[k]
min <- as.double(actions[User_id==i, .(min(time ))])
actiontime <- as.list(actions$time[actions$User_id== i])
for (j in min:4){
#portfolios[User_id == i & time == j] <- portfolios[User_id == i & time == j - 1,.( User_id, time=j, instrument, value, isnegative )]#case in the beginning, where no previous allocation exists
portfolios <- rbindlist(list (portfolios,portfolios[User_id == i & time == j - 1,.( User_id, time = j, instrument, value, isnegative )]))
if ( j in actiontime){
if ( actions[User_id == i & time == j, instrument] %in% portfolios[User_id ==i & time==j, instrument]){
x<- actions$instrument[actions$User_id == i & actions$time == j]
portfolios$value[portfolios$User_id ==i & portfolios$time==j & portfolios$instrument == x] <- portfolios$value[portfolios$User_id ==i & portfolios$time==j & portfolios$instrument == x] + actions$value[actions$User_id == i & actions$time == j]
}else{
#Create a new row, that has the transaction
portfolios <- rbindlist(list (portfolios,actions[User_id == i & time == j ,.(User_id,time, instrument, value, isnegative =0)]))
}
#those postitions that have zero value should drop out
portfolios$isnegative[portfolios$value <=0 &  portfolios$User_id ==i &  portfolios$time==j] <- 1
portfolios <- portfolios[isnegative != 1]
}
}
}
j in actiontime
}
{}
portfolios <- actions[,.(time= 0, instrument=0, value = 0,isnegative = 0), by = c("User_id")]
}
i=1
i
portfolios <- actions[,.(time= 0, instrument=0, value = 0,isnegative = 0), by = c("User_id")]
#Try the whole thing with loops
hh <- actions[,.(mean(value)) , by = c("User_id")]
list <- as.list (hh$User_id)
k = 1
i <- list[k]
min <- as.double(actions[User_id==i, .(min(time ))])
actiontime <- as.list(actions$time[actions$User_id== i])
if ( actions[User_id == i & time == j, instrument] %in% portfolios[User_id ==i & time==j, instrument]){
x<- actions$instrument[actions$User_id == i & actions$time == j]
portfolios$value[portfolios$User_id ==i & portfolios$time==j & portfolios$instrument == x] <- portfolios$value[portfolios$User_id ==i & portfolios$time==j & portfolios$instrument == x] + actions$value[actions$User_id == i & actions$time == j]
}else{
#Create a new row, that has the transaction
portfolios <- rbindlist(list (portfolios,actions[User_id == i & time == j ,.(User_id,time, instrument, value, isnegative =0)]))
}
#those postitions that have zero value should drop out
portfolios$isnegative[portfolios$value <=0 &  portfolios$User_id ==i &  portfolios$time==j] <- 1
portfolios <- portfolios[isnegative != 1]
if ( j in actiontime){
if ( actions[User_id == i & time == j, instrument] %in% portfolios[User_id ==i & time==j, instrument]){
x<- actions$instrument[actions$User_id == i & actions$time == j]
portfolios$value[portfolios$User_id ==i & portfolios$time==j & portfolios$instrument == x] <- portfolios$value[portfolios$User_id ==i & portfolios$time==j & portfolios$instrument == x] + actions$value[actions$User_id == i & actions$time == j]
}else{
#Create a new row, that has the transaction
portfolios <- rbindlist(list (portfolios,actions[User_id == i & time == j ,.(User_id,time, instrument, value, isnegative =0)]))
}
#those postitions that have zero value should drop out
portfolios$isnegative[portfolios$value <=0 &  portfolios$User_id ==i &  portfolios$time==j] <- 1
portfolios <- portfolios[isnegative != 1]
}
portfolios <- actions[,.(time= 0, instrument=0, value = 0,isnegative = 0), by = c("User_id")]
#Try the whole thing with loops
hh <- actions[,.(mean(value)) , by = c("User_id")]
list <- as.list (hh$User_id)
for (k in 1: length(list)){
i <- list[k]
min <- as.double(actions[User_id==i, .(min(time ))])
actiontime <- as.list(actions$time[actions$User_id== i])
for (j in min:4){
#portfolios[User_id == i & time == j] <- portfolios[User_id == i & time == j - 1,.( User_id, time=j, instrument, value, isnegative )]#case in the beginning, where no previous allocation exists
portfolios <- rbindlist(list (portfolios,portfolios[User_id == i & time == j - 1,.( User_id, time = j, instrument, value, isnegative )]))
if ( j %in% actiontime){
if ( actions[User_id == i & time == j, instrument] %in% portfolios[User_id ==i & time==j, instrument]){
x<- actions$instrument[actions$User_id == i & actions$time == j]
portfolios$value[portfolios$User_id ==i & portfolios$time==j & portfolios$instrument == x] <- portfolios$value[portfolios$User_id ==i & portfolios$time==j & portfolios$instrument == x] + actions$value[actions$User_id == i & actions$time == j]
}else{
#Create a new row, that has the transaction
portfolios <- rbindlist(list (portfolios,actions[User_id == i & time == j ,.(User_id,time, instrument, value, isnegative =0)]))
}
#those postitions that have zero value should drop out
portfolios$isnegative[portfolios$value <=0 &  portfolios$User_id ==i &  portfolios$time==j] <- 1
portfolios <- portfolios[isnegative != 1]
}
}
}
portfolios <- data.table(,.(User_id,time,instrument,value,isnegative))
portfolios <- data.table(,.(User_id,time,instrument,value,isnegative))
hh <- actions[,.(mean(value)) , by = c("User_id")]
list <- as.list (hh$User_id)
for (k in 1: length(list)){
i <- list[k]
min <- as.double(actions[User_id==i, .(min(time ))])
actiontime <- as.list(actions$time[actions$User_id== i])
for (j in min:4){
#portfolios[User_id == i & time == j] <- portfolios[User_id == i & time == j - 1,.( User_id, time=j, instrument, value, isnegative )]#case in the beginning, where no previous allocation exists
portfolios <- rbindlist(list (portfolios,portfolios[User_id == i & time == j - 1,.( User_id, time = j, instrument, value, isnegative )]))
if ( j %in% actiontime){
if ( actions[User_id == i & time == j, instrument] %in% portfolios[User_id ==i & time==j, instrument]){
x<- actions$instrument[actions$User_id == i & actions$time == j]
portfolios$value[portfolios$User_id ==i & portfolios$time==j & portfolios$instrument == x] <- portfolios$value[portfolios$User_id ==i & portfolios$time==j & portfolios$instrument == x] + actions$value[actions$User_id == i & actions$time == j]
}else{
#Create a new row, that has the transaction
portfolios <- rbindlist(list (portfolios,actions[User_id == i & time == j ,.(User_id,time, instrument, value, isnegative =0)]))
}
#those postitions that have zero value should drop out
portfolios$isnegative[portfolios$value <=0 &  portfolios$User_id ==i &  portfolios$time==j] <- 1
portfolios <- portfolios[isnegative != 1]
}
}
}
View(portfolios)
portfolios <- actions[,.(time= 0, instrument=0, value = 0,isnegative = 0), by = c("User_id")]
portfolios <- data.table(,.(User_id= 0,time= 0,instrument= 0,value= 0,isnegative=1))
portfolios <- actions[,.(time= 0, instrument=0, value = 0,isnegative = 1), by = c("User_id")]
View(portfolios)
#Try the whole thing with loops
hh <- actions[,.(mean(value)) , by = c("User_id")]
list <- as.list (hh$User_id)
for (k in 1: length(list)){
i <- list[k]
min <- as.double(actions[User_id==i, .(min(time ))])
actiontime <- as.list(actions$time[actions$User_id== i])
for (j in min:4){
#portfolios[User_id == i & time == j] <- portfolios[User_id == i & time == j - 1,.( User_id, time=j, instrument, value, isnegative )]#case in the beginning, where no previous allocation exists
portfolios <- rbindlist(list (portfolios,portfolios[User_id == i & time == j - 1,.( User_id, time = j, instrument, value, isnegative )]))
if ( j %in% actiontime){
if ( actions[User_id == i & time == j, instrument] %in% portfolios[User_id ==i & time==j, instrument]){
x<- actions$instrument[actions$User_id == i & actions$time == j]
portfolios$value[portfolios$User_id ==i & portfolios$time==j & portfolios$instrument == x] <- portfolios$value[portfolios$User_id ==i & portfolios$time==j & portfolios$instrument == x] + actions$value[actions$User_id == i & actions$time == j]
}else{
#Create a new row, that has the transaction
portfolios <- rbindlist(list (portfolios,actions[User_id == i & time == j ,.(User_id,time, instrument, value, isnegative =0)]))
}
#those postitions that have zero value should drop out
portfolios$isnegative[portfolios$value <=0 &  portfolios$User_id ==i &  portfolios$time==j] <- 1
portfolios <- portfolios[isnegative != 1]
}
}
}
data <- read.csv("C:/Users/Grohmann/Documents/Introduction_to_R/Machine-Learning-with-R-datasets/groceries.csv")
lm()
lm()rm(list = ls())
rm(list = ls())
data <- read.csv("C:/Users/Grohmann/Documents/Introduction_to_R/Machine-Learning-with-R-datasets/groceries.csv")
View(data)
View(data)
?read.csv
data <- read.csv("C:/Users/Grohmann/Documents/Introduction_to_R/Machine-Learning-with-R-datasets/groceries.csv", header = FALSE)
View(data)
View(data)
head(data)
install.packages("arules")
library(arules)
groceries <- read.transactions("C:/Users/Grohmann/Documents/Introduction_to_R/Machine-Learning-with-R-datasets/groceries.csv", sep = ",")
summary(groceries)
